{"ast":null,"code":"var _jsxFileName = \"/Users/baljitkhabra/Documents/Altcampus/snake-game/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport AppleLogo from \"./applePixels.png\";\nimport Monitor from \"./oldMonitor.png\";\nimport useInterval from \"./useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasX = 1000;\nconst canvasY = 1000;\nconst initialSnake = [[4, 10], [4, 10]];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 100;\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState(initialSnake);\n  const [apple, setApple] = useState(initialApple);\n  const [direction, setDirection] = useState([0, -1]);\n  const [delay, setDelay] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  useInterval(() => runGame(), delay);\n  useEffect(() => {\n    let fruit = document.getElementById(\"fruit\");\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.setTransform(scale, 0, 0, scale, 0, 0);\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        ctx.fillStyle = \"#a3d001\";\n        snake.forEach(([x, y]) => ctx.fillRect(x, y, 1, 1));\n        ctx.drawImage(fruit, apple[0], apple[1], 1, 1);\n      }\n    }\n  }, [snake, apple, gameOver]);\n  function handleSetScore() {\n    if (score > Number(localStorage.getItem(\"snakeScore\"))) {\n      localStorage.setItem(\"snakeScore\", JSON.stringify(score));\n    }\n  }\n  function play() {\n    setSnake(initialSnake);\n    setApple(initialApple);\n    setDirection([1, 0]);\n    setDelay(timeDelay);\n    setScore(0);\n    setGameOver(false);\n  }\n  function checkCollision(head) {\n    for (let i = 0; i < head.length; i++) {\n      if (head[i] < 0 || head[i] * scale >= canvasX) return true;\n    }\n    for (const s of snake) {\n      if (head[0] === s[0] && head[1] === s[1]) return true;\n    }\n    return false;\n  }\n  function appleAte(newSnake) {\n    let coord = apple.map(() => Math.floor(Math.random() * canvasX / scale));\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = coord;\n      setScore(score + 1);\n      setApple(newApple);\n      return true;\n    }\n    return false;\n  }\n  function runGame() {\n    const newSnake = [...snake];\n    const newSnakeHead = [newSnake[0][0] + direction[0], newSnake[0][1] + direction[1]];\n    newSnake.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) {\n      setDelay(null);\n      setGameOver(true);\n      handleSetScore();\n    }\n    if (!appleAte(newSnake)) {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }\n  function changeDirection(e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        setDirection([-1, 0]);\n        break;\n      case \"ArrowUp\":\n        setDirection([0, -1]);\n        break;\n      case \"ArrowRight\":\n        setDirection([1, 0]);\n        break;\n      case \"ArrowDown\":\n        setDirection([0, 1]);\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: e => changeDirection(e),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"fruit\",\n      src: AppleLogo,\n      alt: \"fruit\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Monitor,\n      alt: \"fruit\",\n      width: \"4000\",\n      className: \"monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"playArea\",\n      ref: canvasRef,\n      width: `${canvasX}px`,\n      height: `${canvasY}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameOver\",\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: play,\n      className: \"playButton\",\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"High Score: \", localStorage.getItem(\"snakeScore\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"mX0Dl9+z+7r0dAiYxYQ1j3K0C5Q=\", false, function () {\n  return [useInterval];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AppleLogo","Monitor","useInterval","jsxDEV","_jsxDEV","canvasX","canvasY","initialSnake","initialApple","scale","timeDelay","App","_s","canvasRef","snake","setSnake","apple","setApple","direction","setDirection","delay","setDelay","gameOver","setGameOver","score","setScore","runGame","fruit","document","getElementById","current","canvas","ctx","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","drawImage","handleSetScore","Number","localStorage","getItem","setItem","JSON","stringify","play","checkCollision","head","i","length","s","appleAte","newSnake","coord","map","Math","floor","random","newApple","newSnakeHead","unshift","pop","changeDirection","e","key","onKeyDown","children","id","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","height","onClick","_c","$RefreshReg$"],"sources":["/Users/baljitkhabra/Documents/Altcampus/snake-game/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport \"./App.css\"\nimport AppleLogo from \"./applePixels.png\"\nimport Monitor from \"./oldMonitor.png\"\nimport useInterval from \"./useInterval\"\n\nconst canvasX = 1000\nconst canvasY = 1000\nconst initialSnake = [ [ 4, 10 ], [ 4, 10 ] ]\nconst initialApple = [ 14, 10 ]\nconst scale = 50\nconst timeDelay = 100\n\nfunction App() {\n\tconst canvasRef = useRef<HTMLCanvasElement | null>(null)\n\tconst [ snake, setSnake ] = useState(initialSnake)\n\tconst [ apple, setApple ] = useState(initialApple)\n\tconst [ direction, setDirection ] = useState([ 0, -1 ])\n\tconst [ delay, setDelay ] = useState<number | null>(null)\n\tconst [ gameOver, setGameOver ] = useState(false)\n\tconst [ score, setScore ] = useState(0)\n\n\tuseInterval(() => runGame(), delay)\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet fruit = document.getElementById(\"fruit\") as HTMLCanvasElement\n\t\t\tif (canvasRef.current) {\n\t\t\t\tconst canvas = canvasRef.current\n\t\t\t\tconst ctx = canvas.getContext(\"2d\")\n\t\t\t\tif (ctx) {\n\t\t\t\t\tctx.setTransform(scale, 0, 0, scale, 0, 0)\n\t\t\t\t\tctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n\t\t\t\t\tctx.fillStyle = \"#a3d001\"\n\t\t\t\t\tsnake.forEach(([ x, y ]) => ctx.fillRect(x, y, 1, 1))\n\t\t\t\t\tctx.drawImage(fruit, apple[0], apple[1], 1, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[ snake, apple, gameOver ]\n\t)\n\n\tfunction handleSetScore() {\n\t\tif (score > Number(localStorage.getItem(\"snakeScore\"))) {\n\t\t\tlocalStorage.setItem(\"snakeScore\", JSON.stringify(score))\n\t\t}\n\t}\n\n\tfunction play() {\n\t\tsetSnake(initialSnake)\n\t\tsetApple(initialApple)\n\t\tsetDirection([ 1, 0 ])\n\t\tsetDelay(timeDelay)\n\t\tsetScore(0)\n\t\tsetGameOver(false)\n\t}\n\n\tfunction checkCollision(head: number[]) {\n\t\tfor (let i = 0; i < head.length; i++) {\n\t\t\tif (head[i] < 0 || head[i] * scale >= canvasX) return true\n\t\t}\n\t\tfor (const s of snake) {\n\t\t\tif (head[0] === s[0] && head[1] === s[1]) return true\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction appleAte(newSnake: number[][]) {\n\t\tlet coord = apple.map(() => Math.floor(Math.random() * canvasX / scale))\n\t\tif (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n\t\t\tlet newApple = coord\n\t\t\tsetScore(score + 1)\n\t\t\tsetApple(newApple)\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction runGame() {\n\t\tconst newSnake = [ ...snake ]\n\t\tconst newSnakeHead = [ newSnake[0][0] + direction[0], newSnake[0][1] + direction[1] ]\n\t\tnewSnake.unshift(newSnakeHead)\n\t\tif (checkCollision(newSnakeHead)) {\n\t\t\tsetDelay(null)\n\t\t\tsetGameOver(true)\n\t\t\thandleSetScore()\n\t\t}\n\t\tif (!appleAte(newSnake)) {\n\t\t\tnewSnake.pop()\n\t\t}\n\t\tsetSnake(newSnake)\n\t}\n\n\tfunction changeDirection(e: React.KeyboardEvent<HTMLDivElement>) {\n\t\tswitch (e.key) {\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tsetDirection([ -1, 0 ])\n\t\t\t\tbreak\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tsetDirection([ 0, -1 ])\n\t\t\t\tbreak\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tsetDirection([ 1, 0 ])\n\t\t\t\tbreak\n\t\t\tcase \"ArrowDown\":\n\t\t\t\tsetDirection([ 0, 1 ])\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<div onKeyDown={(e) => changeDirection(e)}>\n\t\t\t<img id=\"fruit\" src={AppleLogo} alt=\"fruit\" width=\"30\" />\n\t\t\t<img src={Monitor} alt=\"fruit\" width=\"4000\" className=\"monitor\" />\n\t\t\t<canvas className=\"playArea\" ref={canvasRef} width={`${canvasX}px`} height={`${canvasY}px`} />\n\t\t\t{gameOver && <div className=\"gameOver\">Game Over</div>}\n\t\t\t<button onClick={play} className=\"playButton\">\n\t\t\t\tPlay\n\t\t\t</button>\n\t\t\t<div className=\"scoreBox\">\n\t\t\t\t<h2>Score: {score}</h2>\n\t\t\t\t<h2>High Score: {localStorage.getItem(\"snakeScore\")}</h2>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}